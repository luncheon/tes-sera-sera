{"version":3,"sources":["app.js"],"names":["progressElement","document","getElementsByTagName","logger","log","status","value","progress","console","debug","createTesseractWorker","langs","tesseractWorker","Tesseract","createWorker","load","loadLanguage","initialize","setParameters","tessedit_pageseg_mode","PSM","SPARSE_TEXT","tessjs_create_hocr","tessjs_create_tsv","playVideo","videoElement","navigator","mediaDevices","getUserMedia","video","width","height","videoStream","srcObject","Promise","resolve","onloadedmetadata","play","all","videoChanged","addEventListener","canvasElement","context2d","getContext","resultElement","paused","setTimeout","drawImage","recognize","recognized","data","text","error","alert","message","JSON","stringify"],"mappings":"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","file":"app.cd559fc0.js","sourceRoot":"../src","sourcesContent":["const progressElement = document.getElementsByTagName('progress')[0]\nconst logger = log => {\n  if (log.status === 'recognizing text') {\n    progressElement.value = log.progress\n  } else {\n    console.debug(log)\n  }\n}\n\n// https://github.com/naptha/tesseract.js/blob/master/docs/api.md\nconst createTesseractWorker = async langs => {\n  const tesseractWorker = Tesseract.createWorker({ logger })\n  await tesseractWorker.load()\n  await tesseractWorker.loadLanguage(langs)\n  await tesseractWorker.initialize(langs)\n  await tesseractWorker.setParameters({\n    tessedit_pageseg_mode: Tesseract.PSM.SPARSE_TEXT,\n    tessjs_create_hocr: '0',\n    tessjs_create_tsv: '0',\n  })\n  return tesseractWorker\n}\n\nconst playVideo = async videoElement => {\n  const videoStream = await navigator.mediaDevices.getUserMedia({\n    video: {\n      width: videoElement.width,\n      height: videoElement.height,\n    },\n  })\n  videoElement.srcObject = videoStream\n  await new Promise(resolve => videoElement.onloadedmetadata = resolve)\n  videoElement.play()\n}\n\n(async () => {\n  const videoElement = document.getElementsByTagName('video')[0]\n  const [tesseractWorker] = await Promise.all([\n    createTesseractWorker('jpn+eng'),\n    playVideo(videoElement),\n  ])\n\n  let videoChanged = true\n  videoElement.addEventListener('play', () => videoChanged = true)\n\n  const canvasElement = document.getElementsByTagName('canvas')[0]\n  const context2d = canvasElement.getContext('2d')\n  const resultElement = document.getElementsByTagName('textarea')[0]\n  while (true) {\n    if (videoElement.paused) {\n      if (videoChanged) {\n        videoChanged = false\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        continue\n      }\n    }\n    try {\n      context2d.drawImage(videoElement, 0, 0)\n      const recognized = await tesseractWorker.recognize(canvasElement)\n      console.debug(recognized.data)\n      resultElement.value = recognized.data.text\n    } catch (error) {\n      console.error(error)\n      alert(error.message || JSON.stringify(error))\n      break\n    }\n  }\n})()\n"]}